#ifndef HANGULSYLLABLETYPE_H
#define HANGULSYLLABLETYPE_H
/*
 *  Copyright (c) 2015 International Characters, Inc.
 *  This software is licensed to the public under the Open Software License 3.0.
 *  icgrep is a trademark of International Characters, Inc.
 *
 *  This file is generated by UCD_properties.py - manual edits may be lost.
 */

#include "PropertyObjects.h"
#include "PropertyValueAliases.h"
#include "unicode_set.h"

namespace UCD {
    namespace HST_ns {
    /** Code Point Ranges for L
    [4352, 4447], [43360, 43388]**/
    const UnicodeSet l_Set 
        {{{Empty, 136}, {Full, 3}, {Empty, 1216}, {Mixed, 1},
          {Empty, 33460}},
         {0x1fffffff}};
    /** Code Point Ranges for LV
    [44032, 44032], [44060, 44060], [44088, 44088], [44116, 44116],
    [44144, 44144], [44172, 44172], [44200, 44200], [44228, 44228],
    [44256, 44256], [44284, 44284], [44312, 44312], [44340, 44340],
    [44368, 44368], [44396, 44396], [44424, 44424], [44452, 44452],
    [44480, 44480], [44508, 44508], [44536, 44536], [44564, 44564],
    [44592, 44592], [44620, 44620], [44648, 44648], [44676, 44676],
    [44704, 44704], [44732, 44732], [44760, 44760], [44788, 44788],
    [44816, 44816], [44844, 44844], [44872, 44872], [44900, 44900],
    [44928, 44928], [44956, 44956], [44984, 44984], [45012, 45012],
    [45040, 45040], [45068, 45068], [45096, 45096], [45124, 45124],
    [45152, 45152], [45180, 45180], [45208, 45208], [45236, 45236],
    [45264, 45264], [45292, 45292], [45320, 45320], [45348, 45348],
    [45376, 45376], [45404, 45404], [45432, 45432], [45460, 45460],
    [45488, 45488], [45516, 45516], [45544, 45544], [45572, 45572],
    [45600, 45600], [45628, 45628], [45656, 45656], [45684, 45684],
    [45712, 45712], [45740, 45740], [45768, 45768], [45796, 45796],
    [45824, 45824], [45852, 45852], [45880, 45880], [45908, 45908],
    [45936, 45936], [45964, 45964], [45992, 45992], [46020, 46020],
    [46048, 46048], [46076, 46076], [46104, 46104], [46132, 46132],
    [46160, 46160], [46188, 46188], [46216, 46216], [46244, 46244],
    [46272, 46272], [46300, 46300], [46328, 46328], [46356, 46356],
    [46384, 46384], [46412, 46412], [46440, 46440], [46468, 46468],
    [46496, 46496], [46524, 46524], [46552, 46552], [46580, 46580],
    [46608, 46608], [46636, 46636], [46664, 46664], [46692, 46692],
    [46720, 46720], [46748, 46748], [46776, 46776], [46804, 46804],
    [46832, 46832], [46860, 46860], [46888, 46888], [46916, 46916],
    [46944, 46944], [46972, 46972], [47000, 47000], [47028, 47028],
    [47056, 47056], [47084, 47084], [47112, 47112], [47140, 47140],
    [47168, 47168], [47196, 47196], [47224, 47224], [47252, 47252],
    [47280, 47280], [47308, 47308], [47336, 47336], [47364, 47364],
    [47392, 47392], [47420, 47420], [47448, 47448], [47476, 47476],
    [47504, 47504], [47532, 47532], [47560, 47560], [47588, 47588],
    [47616, 47616], [47644, 47644], [47672, 47672], [47700, 47700],
    [47728, 47728], [47756, 47756], [47784, 47784], [47812, 47812],
    [47840, 47840], [47868, 47868], [47896, 47896], [47924, 47924],
    [47952, 47952], [47980, 47980], [48008, 48008], [48036, 48036],
    [48064, 48064], [48092, 48092], [48120, 48120], [48148, 48148],
    [48176, 48176], [48204, 48204], [48232, 48232], [48260, 48260],
    [48288, 48288], [48316, 48316], [48344, 48344], [48372, 48372],
    [48400, 48400], [48428, 48428], [48456, 48456], [48484, 48484],
    [48512, 48512], [48540, 48540], [48568, 48568], [48596, 48596],
    [48624, 48624], [48652, 48652], [48680, 48680], [48708, 48708],
    [48736, 48736], [48764, 48764], [48792, 48792], [48820, 48820],
    [48848, 48848], [48876, 48876], [48904, 48904], [48932, 48932],
    [48960, 48960], [48988, 48988], [49016, 49016], [49044, 49044],
    [49072, 49072], [49100, 49100], [49128, 49128], [49156, 49156],
    [49184, 49184], [49212, 49212], [49240, 49240], [49268, 49268],
    [49296, 49296], [49324, 49324], [49352, 49352], [49380, 49380],
    [49408, 49408], [49436, 49436], [49464, 49464], [49492, 49492],
    [49520, 49520], [49548, 49548], [49576, 49576], [49604, 49604],
    [49632, 49632], [49660, 49660], [49688, 49688], [49716, 49716],
    [49744, 49744], [49772, 49772], [49800, 49800], [49828, 49828],
    [49856, 49856], [49884, 49884], [49912, 49912], [49940, 49940],
    [49968, 49968], [49996, 49996], [50024, 50024], [50052, 50052],
    [50080, 50080], [50108, 50108], [50136, 50136], [50164, 50164],
    [50192, 50192], [50220, 50220], [50248, 50248], [50276, 50276],
    [50304, 50304], [50332, 50332], [50360, 50360], [50388, 50388],
    [50416, 50416], [50444, 50444], [50472, 50472], [50500, 50500],
    [50528, 50528], [50556, 50556], [50584, 50584], [50612, 50612],
    [50640, 50640], [50668, 50668], [50696, 50696], [50724, 50724],
    [50752, 50752], [50780, 50780], [50808, 50808], [50836, 50836],
    [50864, 50864], [50892, 50892], [50920, 50920], [50948, 50948],
    [50976, 50976], [51004, 51004], [51032, 51032], [51060, 51060],
    [51088, 51088], [51116, 51116], [51144, 51144], [51172, 51172],
    [51200, 51200], [51228, 51228], [51256, 51256], [51284, 51284],
    [51312, 51312], [51340, 51340], [51368, 51368], [51396, 51396],
    [51424, 51424], [51452, 51452], [51480, 51480], [51508, 51508],
    [51536, 51536], [51564, 51564], [51592, 51592], [51620, 51620],
    [51648, 51648], [51676, 51676], [51704, 51704], [51732, 51732],
    [51760, 51760], [51788, 51788], [51816, 51816], [51844, 51844],
    [51872, 51872], [51900, 51900], [51928, 51928], [51956, 51956],
    [51984, 51984], [52012, 52012], [52040, 52040], [52068, 52068],
    [52096, 52096], [52124, 52124], [52152, 52152], [52180, 52180],
    [52208, 52208], [52236, 52236], [52264, 52264], [52292, 52292],
    [52320, 52320], [52348, 52348], [52376, 52376], [52404, 52404],
    [52432, 52432], [52460, 52460], [52488, 52488], [52516, 52516],
    [52544, 52544], [52572, 52572], [52600, 52600], [52628, 52628],
    [52656, 52656], [52684, 52684], [52712, 52712], [52740, 52740],
    [52768, 52768], [52796, 52796], [52824, 52824], [52852, 52852],
    [52880, 52880], [52908, 52908], [52936, 52936], [52964, 52964],
    [52992, 52992], [53020, 53020], [53048, 53048], [53076, 53076],
    [53104, 53104], [53132, 53132], [53160, 53160], [53188, 53188],
    [53216, 53216], [53244, 53244], [53272, 53272], [53300, 53300],
    [53328, 53328], [53356, 53356], [53384, 53384], [53412, 53412],
    [53440, 53440], [53468, 53468], [53496, 53496], [53524, 53524],
    [53552, 53552], [53580, 53580], [53608, 53608], [53636, 53636],
    [53664, 53664], [53692, 53692], [53720, 53720], [53748, 53748],
    [53776, 53776], [53804, 53804], [53832, 53832], [53860, 53860],
    [53888, 53888], [53916, 53916], [53944, 53944], [53972, 53972],
    [54000, 54000], [54028, 54028], [54056, 54056], [54084, 54084],
    [54112, 54112], [54140, 54140], [54168, 54168], [54196, 54196],
    [54224, 54224], [54252, 54252], [54280, 54280], [54308, 54308],
    [54336, 54336], [54364, 54364], [54392, 54392], [54420, 54420],
    [54448, 54448], [54476, 54476], [54504, 54504], [54532, 54532],
    [54560, 54560], [54588, 54588], [54616, 54616], [54644, 54644],
    [54672, 54672], [54700, 54700], [54728, 54728], [54756, 54756],
    [54784, 54784], [54812, 54812], [54840, 54840], [54868, 54868],
    [54896, 54896], [54924, 54924], [54952, 54952], [54980, 54980],
    [55008, 55008], [55036, 55036], [55064, 55064], [55092, 55092],
    [55120, 55120], [55148, 55148], [55176, 55176]**/
    const UnicodeSet lv_Set 
        {{{Empty, 1376}, {Mixed, 349}, {Empty, 33091}},
         {0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100, 0x00000010,
          0x10000001, 0x01000000, 0x00100000, 0x00010000, 0x00001000,
          0x00000100, 0x00000010, 0x10000001, 0x01000000, 0x00100000,
          0x00010000, 0x00001000, 0x00000100, 0x00000010, 0x10000001,
          0x01000000, 0x00100000, 0x00010000, 0x00001000, 0x00000100,
          0x00000010, 0x10000001, 0x01000000, 0x00100000, 0x00010000,
          0x00001000, 0x00000100, 0x00000010, 0x10000001, 0x01000000,
          0x00100000, 0x00010000, 0x00001000, 0x00000100}};
    /** Code Point Ranges for LVT
    [44033, 44059], [44061, 44087], [44089, 44115], [44117, 44143],
    [44145, 44171], [44173, 44199], [44201, 44227], [44229, 44255],
    [44257, 44283], [44285, 44311], [44313, 44339], [44341, 44367],
    [44369, 44395], [44397, 44423], [44425, 44451], [44453, 44479],
    [44481, 44507], [44509, 44535], [44537, 44563], [44565, 44591],
    [44593, 44619], [44621, 44647], [44649, 44675], [44677, 44703],
    [44705, 44731], [44733, 44759], [44761, 44787], [44789, 44815],
    [44817, 44843], [44845, 44871], [44873, 44899], [44901, 44927],
    [44929, 44955], [44957, 44983], [44985, 45011], [45013, 45039],
    [45041, 45067], [45069, 45095], [45097, 45123], [45125, 45151],
    [45153, 45179], [45181, 45207], [45209, 45235], [45237, 45263],
    [45265, 45291], [45293, 45319], [45321, 45347], [45349, 45375],
    [45377, 45403], [45405, 45431], [45433, 45459], [45461, 45487],
    [45489, 45515], [45517, 45543], [45545, 45571], [45573, 45599],
    [45601, 45627], [45629, 45655], [45657, 45683], [45685, 45711],
    [45713, 45739], [45741, 45767], [45769, 45795], [45797, 45823],
    [45825, 45851], [45853, 45879], [45881, 45907], [45909, 45935],
    [45937, 45963], [45965, 45991], [45993, 46019], [46021, 46047],
    [46049, 46075], [46077, 46103], [46105, 46131], [46133, 46159],
    [46161, 46187], [46189, 46215], [46217, 46243], [46245, 46271],
    [46273, 46299], [46301, 46327], [46329, 46355], [46357, 46383],
    [46385, 46411], [46413, 46439], [46441, 46467], [46469, 46495],
    [46497, 46523], [46525, 46551], [46553, 46579], [46581, 46607],
    [46609, 46635], [46637, 46663], [46665, 46691], [46693, 46719],
    [46721, 46747], [46749, 46775], [46777, 46803], [46805, 46831],
    [46833, 46859], [46861, 46887], [46889, 46915], [46917, 46943],
    [46945, 46971], [46973, 46999], [47001, 47027], [47029, 47055],
    [47057, 47083], [47085, 47111], [47113, 47139], [47141, 47167],
    [47169, 47195], [47197, 47223], [47225, 47251], [47253, 47279],
    [47281, 47307], [47309, 47335], [47337, 47363], [47365, 47391],
    [47393, 47419], [47421, 47447], [47449, 47475], [47477, 47503],
    [47505, 47531], [47533, 47559], [47561, 47587], [47589, 47615],
    [47617, 47643], [47645, 47671], [47673, 47699], [47701, 47727],
    [47729, 47755], [47757, 47783], [47785, 47811], [47813, 47839],
    [47841, 47867], [47869, 47895], [47897, 47923], [47925, 47951],
    [47953, 47979], [47981, 48007], [48009, 48035], [48037, 48063],
    [48065, 48091], [48093, 48119], [48121, 48147], [48149, 48175],
    [48177, 48203], [48205, 48231], [48233, 48259], [48261, 48287],
    [48289, 48315], [48317, 48343], [48345, 48371], [48373, 48399],
    [48401, 48427], [48429, 48455], [48457, 48483], [48485, 48511],
    [48513, 48539], [48541, 48567], [48569, 48595], [48597, 48623],
    [48625, 48651], [48653, 48679], [48681, 48707], [48709, 48735],
    [48737, 48763], [48765, 48791], [48793, 48819], [48821, 48847],
    [48849, 48875], [48877, 48903], [48905, 48931], [48933, 48959],
    [48961, 48987], [48989, 49015], [49017, 49043], [49045, 49071],
    [49073, 49099], [49101, 49127], [49129, 49155], [49157, 49183],
    [49185, 49211], [49213, 49239], [49241, 49267], [49269, 49295],
    [49297, 49323], [49325, 49351], [49353, 49379], [49381, 49407],
    [49409, 49435], [49437, 49463], [49465, 49491], [49493, 49519],
    [49521, 49547], [49549, 49575], [49577, 49603], [49605, 49631],
    [49633, 49659], [49661, 49687], [49689, 49715], [49717, 49743],
    [49745, 49771], [49773, 49799], [49801, 49827], [49829, 49855],
    [49857, 49883], [49885, 49911], [49913, 49939], [49941, 49967],
    [49969, 49995], [49997, 50023], [50025, 50051], [50053, 50079],
    [50081, 50107], [50109, 50135], [50137, 50163], [50165, 50191],
    [50193, 50219], [50221, 50247], [50249, 50275], [50277, 50303],
    [50305, 50331], [50333, 50359], [50361, 50387], [50389, 50415],
    [50417, 50443], [50445, 50471], [50473, 50499], [50501, 50527],
    [50529, 50555], [50557, 50583], [50585, 50611], [50613, 50639],
    [50641, 50667], [50669, 50695], [50697, 50723], [50725, 50751],
    [50753, 50779], [50781, 50807], [50809, 50835], [50837, 50863],
    [50865, 50891], [50893, 50919], [50921, 50947], [50949, 50975],
    [50977, 51003], [51005, 51031], [51033, 51059], [51061, 51087],
    [51089, 51115], [51117, 51143], [51145, 51171], [51173, 51199],
    [51201, 51227], [51229, 51255], [51257, 51283], [51285, 51311],
    [51313, 51339], [51341, 51367], [51369, 51395], [51397, 51423],
    [51425, 51451], [51453, 51479], [51481, 51507], [51509, 51535],
    [51537, 51563], [51565, 51591], [51593, 51619], [51621, 51647],
    [51649, 51675], [51677, 51703], [51705, 51731], [51733, 51759],
    [51761, 51787], [51789, 51815], [51817, 51843], [51845, 51871],
    [51873, 51899], [51901, 51927], [51929, 51955], [51957, 51983],
    [51985, 52011], [52013, 52039], [52041, 52067], [52069, 52095],
    [52097, 52123], [52125, 52151], [52153, 52179], [52181, 52207],
    [52209, 52235], [52237, 52263], [52265, 52291], [52293, 52319],
    [52321, 52347], [52349, 52375], [52377, 52403], [52405, 52431],
    [52433, 52459], [52461, 52487], [52489, 52515], [52517, 52543],
    [52545, 52571], [52573, 52599], [52601, 52627], [52629, 52655],
    [52657, 52683], [52685, 52711], [52713, 52739], [52741, 52767],
    [52769, 52795], [52797, 52823], [52825, 52851], [52853, 52879],
    [52881, 52907], [52909, 52935], [52937, 52963], [52965, 52991],
    [52993, 53019], [53021, 53047], [53049, 53075], [53077, 53103],
    [53105, 53131], [53133, 53159], [53161, 53187], [53189, 53215],
    [53217, 53243], [53245, 53271], [53273, 53299], [53301, 53327],
    [53329, 53355], [53357, 53383], [53385, 53411], [53413, 53439],
    [53441, 53467], [53469, 53495], [53497, 53523], [53525, 53551],
    [53553, 53579], [53581, 53607], [53609, 53635], [53637, 53663],
    [53665, 53691], [53693, 53719], [53721, 53747], [53749, 53775],
    [53777, 53803], [53805, 53831], [53833, 53859], [53861, 53887],
    [53889, 53915], [53917, 53943], [53945, 53971], [53973, 53999],
    [54001, 54027], [54029, 54055], [54057, 54083], [54085, 54111],
    [54113, 54139], [54141, 54167], [54169, 54195], [54197, 54223],
    [54225, 54251], [54253, 54279], [54281, 54307], [54309, 54335],
    [54337, 54363], [54365, 54391], [54393, 54419], [54421, 54447],
    [54449, 54475], [54477, 54503], [54505, 54531], [54533, 54559],
    [54561, 54587], [54589, 54615], [54617, 54643], [54645, 54671],
    [54673, 54699], [54701, 54727], [54729, 54755], [54757, 54783],
    [54785, 54811], [54813, 54839], [54841, 54867], [54869, 54895],
    [54897, 54923], [54925, 54951], [54953, 54979], [54981, 55007],
    [55009, 55035], [55037, 55063], [55065, 55091], [55093, 55119],
    [55121, 55147], [55149, 55175], [55177, 55203]**/
    const UnicodeSet lvt_Set 
        {{{Empty, 1376}, {Mixed, 350}, {Empty, 33090}},
         {0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef,
          0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff,
          0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff,
          0xfffeffff, 0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe,
          0xfeffffff, 0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff,
          0xffffffef, 0xeffffffe, 0xfeffffff, 0xffefffff, 0xfffeffff,
          0xffffefff, 0xfffffeff, 0xffffffef, 0xeffffffe, 0xfeffffff,
          0xffefffff, 0xfffeffff, 0xffffefff, 0xfffffeff, 0x0000000f}};
    /** Code Point Ranges for NA
    [0, 4351], [4608, 43359], [43389, 44031], [55204, 55215],
    [55239, 55242], [55292, 1114111]**/
    const UnicodeSet na_Set 
        {{{Full, 136}, {Empty, 8}, {Full, 1211}, {Mixed, 1}, {Full, 20},
          {Empty, 349}, {Mixed, 3}, {Full, 33088}},
         {0xe0000000, 0x0000fff0, 0x00000780, 0xf0000000}};
    /** Code Point Ranges for T
    [4520, 4607], [55243, 55291]**/
    const UnicodeSet t_Set 
        {{{Empty, 141}, {Mixed, 1}, {Full, 2}, {Empty, 1582}, {Mixed, 2},
          {Empty, 33088}},
         {0xffffff00, 0xfffff800, 0x0fffffff}};
    /** Code Point Ranges for V
    [4448, 4519], [55216, 55238]**/
    const UnicodeSet v_Set 
        {{{Empty, 139}, {Full, 2}, {Mixed, 1}, {Empty, 1583}, {Mixed, 2},
          {Empty, 33089}},
         {0x000000ff, 0xffff0000, 0x0000007f}};
    static EnumeratedPropertyObject property_object
        {hst,
         HST_ns::enum_names,
         HST_ns::value_names,
         HST_ns::aliases_only_map,
         {&l_Set, &lv_Set, &lvt_Set, &na_Set, &t_Set, &v_Set
         }};
    }
}

#endif
